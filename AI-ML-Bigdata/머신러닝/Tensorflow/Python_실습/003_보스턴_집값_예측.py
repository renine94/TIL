# -*- coding: utf-8 -*-
"""003_보스턴 집값 예측.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aUrieMEkkPPm_ZDp8S7s7RlE6eE8l7aa

# 보스턴 집값 예측
- github csv url: https://raw.githubusercontent.com/blackdew/tensorflow1/master/csv/boston.csv
"""

# 라이브러리 사용
import tensorflow as tf
import pandas as pd

# 1. 과거의 데이터를 준비합니다.
파일경로 = '/content/boston.csv'
보스턴 = pd.read_csv(파일경로)
print(보스턴.columns)
보스턴.head()

# 독립변수, 종속변수 분리
독립 = 보스턴[['crim', 'zn', 'indus', 'chas', 'nox', 'rm', 'age', 'dis', 'rad', 'tax',
              'ptratio', 'b', 'lstat']]
종속 = 보스턴[['medv']]

print(독립.shape, 종속.shape)

# 2. 모델의 구조를 만듭니다.
X = tf.keras.layers.Input(shape=[13])
Y = tf.keras.layers.Dense(1)(X)
model = tf.keras.models.Model(X, Y)
model.compile(loss='mse')

# 3. 데이터로 모델을 학습(Fit) 합니다.
model.fit(독립, 종속, epochs=1000, verbose=0)
model.fit(독립, 종속, epochs=10)

# 4. 모델을 이용합니다.
model.predict(독립[0:5])

종속[0:5]

# 모델의 수식 확인
model.get_weights()

"""y = -0.08539015 * x1 +
      0.0718247 * x2 +
      -0.04592787 * x3 +
      3.2271686 * x4 +
      1.5786537 * x5 +
      4.0344653 * x6 +
      0.01755736 * x7 +
      -0.8420857 * x8 +
      0.15231493 * x9 +
      -0.00810707 * x10 +
      -0.01641254 * x11 +
      0.01751072 * x12 +
      -0.5740162 * x13 +
      2.4934704
"""